
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/01_temporalTimeSeriesAnalysis/plot_autoregressiveAutocovariance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_01_temporalTimeSeriesAnalysis_plot_autoregressiveAutocovariance.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_01_temporalTimeSeriesAnalysis_plot_autoregressiveAutocovariance.py:


AR(1) analytical and estimated autocovariance
=============================================

.. GENERATED FROM PYTHON SOURCE LINES 7-9

Import requirements
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 9-14

.. code-block:: Python


    import os
    import numpy as np
    import plotly.graph_objects as go








.. GENERATED FROM PYTHON SOURCE LINES 15-17

Define variables
----------------

.. GENERATED FROM PYTHON SOURCE LINES 17-24

.. code-block:: Python


    srate = 1
    T = 10000
    sigma = 1.0
    phi = -0.9
    lags = np.arange(20)








.. GENERATED FROM PYTHON SOURCE LINES 25-28

Create white noise
------------------


.. GENERATED FROM PYTHON SOURCE LINES 28-33

.. code-block:: Python


    time = np.arange(0, T, 1.0/srate)
    N = len(time)
    w = np.random.normal(loc=0, scale=sigma, size=N)








.. GENERATED FROM PYTHON SOURCE LINES 34-37

Create autoregressive time series
---------------------------------


.. GENERATED FROM PYTHON SOURCE LINES 37-42

.. code-block:: Python

    ar = np.empty(len(w), dtype=np.double)
    ar[0] = w[0]
    for i in range(1, len(w)):
        ar[i] = phi * ar[i-1] + w[i]








.. GENERATED FROM PYTHON SOURCE LINES 43-46

Estimate autocovariance
-----------------------


.. GENERATED FROM PYTHON SOURCE LINES 46-60

.. code-block:: Python


    estAcov = np.zeros(len(lags))
    anaAcov = np.zeros(len(lags))
    arMu = np.mean(ar)
    for h in lags:
        if h > 0:
            xs = ar[h:] - arMu
            xt = ar[:-h] - arMu
        elif h == 0:
            xs = ar - arMu
            xt = ar - arMu
        estAcov[h] = np.mean(xs * xt)
        anaAcov[h] = phi**h * sigma**2 / (1 - phi**2)








.. GENERATED FROM PYTHON SOURCE LINES 61-64

Plot autoregressive time series, true and estimated autocovariance
------------------------------------------------------------------


.. GENERATED FROM PYTHON SOURCE LINES 64-91

.. code-block:: Python


    fig = go.Figure()
    trace = go.Scatter(x=time, y=ar, mode="lines+markers")
    fig.add_trace(trace)
    fig.update_layout(xaxis=dict(title="Time (sec)"), yaxis=dict(title="x"))

    if not os.path.exists("figures"):
        os.mkdir("figures")

    fig.write_html(f"figures/autoregressiveSamplesN{T}.html")
    fig.write_image(f"figures/autoregressiveSamplesN{T}.png")

    fig = go.Figure()
    trace = go.Scatter(x=lags, y=anaAcov, mode="lines+markers", name="analytical")
    fig.add_trace(trace)
    trace = go.Scatter(x=lags, y=estAcov, mode="lines+markers", name="estimated")
    fig.add_trace(trace)
    fig.update_layout(title=f"N={T}", xaxis=dict(title="Lag (samples)"),
                      yaxis=dict(title="Autocovariance"))

    if not os.path.exists("figures"):
        os.mkdir("figures")

    fig.write_html(f"figures/autoregressiveAutoCovN{T}.html")
    fig.write_image(f"figures/autoregressiveAutoCovN{T}.png")

    fig





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-3.0.0.min.js"></script>                <div id="fd813c72-befb-4ae6-8544-fdfa2cde70d0" class="plotly-graph-div" style="height:100%; width:100%;"></div>            <script type="text/javascript">                window.PLOTLYENV=window.PLOTLYENV || {};                                if (document.getElementById("fd813c72-befb-4ae6-8544-fdfa2cde70d0")) {                    Plotly.newPlot(                        "fd813c72-befb-4ae6-8544-fdfa2cde70d0",                        [{"mode":"lines+markers","name":"analytical","x":{"dtype":"i1","bdata":"AAECAwQFBgcICQoLDA0ODxAREhM="},"y":{"dtype":"f8","bdata":"2VBeQ3kNFUAqr6G8hvISwNlQXkN5DRFAISsQRtqxDsA3jQ4\u002fEaALQH\u002flWVLc3AjAi063419gBkDk+SSAiSMEwE5HIcD7HwJALMDqLPxPAMDqWXPqxVz9P7idNIYYbfq\u002f9I1iEpbI9z9bGb9Dumf1vwbK+DzBQ\u002fM\u002fnoJ5UJRW8b+3hKddcTXvPz\u002fEFqF\u002fFuy\u002fn7DH3XJH6T\u002f2HprHTcDmvw=="},"type":"scatter"},{"mode":"lines+markers","name":"estimated","x":{"dtype":"i1","bdata":"AAECAwQFBgcICQoLDA0ODxAREhM="},"y":{"dtype":"f8","bdata":"+OZE\u002fEKNFEAtiKhHlG8SwJqJJwqJjxBAMu8\u002f75DADcA0847KPNAKQBqGOOZCLQjATg6HLavbBUB98DsTVskDwAFlq4vt7gFAMfeVxVc1AMB\u002fsIVnvCz9Pwbb7rdWJvq\u002fCK6l1SZz9z\u002f6SdYRrbP0v4N3kPjzcvI\u002f5IQ4HNaL8L89I5TlRL\u002ftPznwLLV1Quu\u002fVEKd57Tb6D8nNu\u002fh9Znmvw=="},"type":"scatter"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermap":[{"type":"scattermap","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"title":{"text":"N=10000"},"xaxis":{"title":{"text":"Lag (samples)"}},"yaxis":{"title":{"text":"Autocovariance"}}},                        {"responsive": true}                    )                };            </script>        </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.932 seconds)


.. _sphx_glr_download_auto_examples_01_temporalTimeSeriesAnalysis_plot_autoregressiveAutocovariance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_autoregressiveAutocovariance.ipynb <plot_autoregressiveAutocovariance.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_autoregressiveAutocovariance.py <plot_autoregressiveAutocovariance.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_autoregressiveAutocovariance.zip <plot_autoregressiveAutocovariance.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
